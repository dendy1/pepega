<program> => "program" <identifier> ";" <block> "."
<block> => <variable declaration part> <statement part>

<variable declaration part> => <empty> | var (<variable declaration> ";")+
<variable declaration> => <identifier> ("," <identifier>)* ":" <type>
<type> => <simple type> | <array type>
<array type> =>	"array" "[" <index range> "]" "of" <simple type>
<index range> => <integer constant> ".." <integer constant>
<simple type> => K("Byte"), K("Integer"), K("Cardinal"), K("Shortint"), K("Smallint"), K("Longint"), K("Int64"), K("Word"), K("Longword")

<statement part> => <compound statement>
<compound statement> => "begin" <statement> (";" <statement>)* "end"
<statement> => <simple statement> | <structured statement>

<simple statement> => <assignment statement> | <read statement> | <write statement>
<assignment statement> => <variable> ":=" <expression>
<read statement> => "read" "(" <input variable> ("," <input variable>)* ")"
<input variable> => <variable>
<write statement> => "write" "(" <output value> ("," <output value>)* ")"
<output value> => <expression>

<structured statement> => <compound statement> | <if statement> | <while statement>
<if statement> => "if" <expression> "then" <statement> ("else" <statement>)?
<while statement> => "while" <expression> "do" <statement>

<expression> => <simple expression> (<relational operator> <simple expression>)?
<simple expression> => (<sign>)? <term> (<adding operator> <term>)*
<term> => <factor> (<multiplying operator> <factor>)*
<factor> => <variable> | <constant> | "(" <expression> ")" | "not" <factor>

<relational operator> => "=" | "<>" | "<" | "<=" | ">=" | ">"
<sign> => "+" | "-"
<adding operator> => "+" | "-" | "or"
<multiplying operator> => "*" | "div" | "and"
<variable> => <entire variable> | <indexed variable>
<indexed variable> => <array variable> "[" <expression> "]"
<array variable> => <entire variable>
<entire variable> => <variable identifier>
<variable identifier> => <identifier>
